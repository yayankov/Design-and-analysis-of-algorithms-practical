
/*
Задача 1: Математика
Нашият добър приятел заекът Чушкопек наскоро откри математиката и
не може да спре да се забавлява с решаването на различни интерсни задачи.
Той обаче реши да се научи и да програмира, за да може да прави по-големите
изчисления на компютър. За целта той ви моли да му помогнете да се научи,
като напишете програма, която решава следната негова задача:
По дадена редица от цели числа А1, ..., Аn трябва да се намерят l-тото и
r-тото по големина числа измежду тях (имайте предвид, че най-голямото
число е първо по големина) да ги изведе (повече информация в секцията
изход), след това да изчисли сумата на числата между l-тото и r-тото (т.е.
числата, които са (r+1)-во, (r+2)-ро, ..., (l-1)-во по големина) и от нея да извади
сумата на първите (r-1) по големина числа (т.е. най-големите (r-1) на брой
числа) и да изведе резултата от тази разлика.
(Напомняне: сумата на 0 елемента е 0)
Ограничения:
0 < r ≤ l ≤ n ≤ 106
, -1000 ≤ Ai ≤ 1000, ML: 5.5MB, TL: 0.4s
Вход:
От първият ред на стандартният вход се въвеждат 3 цели числа разделени с
интервали: n – броят числа в цялата редица, l и r от условието. На следващият
ред от стандартният вход, разделени с интервали, се въвеждат елементите
на редицата Ai.
Изход:
На единственият ред от стандартният изход трябва да бъдат изведени 3 цели
числа разделени с интервали, първо l-тото по големина, след това r-тото по
големина и накрая търсената разлика от условието (повече детайли може да
видите в примерният изход).
-26 -15 -2 0 3 7 10 25
Примерен
вход:
7 3 1
-26 3 -2 25 0 7 10
Примерен
изход:
7 25 10
Примерен
вход: 8 6 3
-26 3 -2 25 0 7 10 -15
Примерен
изход:
-2 7 -32
*/
#include <iostream>
#include <stdio.h>
#include <queue>
#include <vector>
#include <limits.h>
#include <algorithm>
#include<math.h>

using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int n, l, r;
    cin >> n >> l >> r;
    int num;
    vector<int> nums;
    for(int i=0; i<n; i++) {
        cin >> num;
        nums.push_back(num);
    }
    sort(nums.begin(), nums.end());
    cout << nums[nums.size() - l] << " ";
    cout << nums[nums.size() - r] << " ";
    int sum1 = 0;
    int sum2 = 0;
    for(int i=nums.size() - l + 1; i<nums.size(); i++) {
        if(i < nums.size() - r)
            sum1 += nums[i];
        if(i > nums.size() - r)
            sum2 += nums[i];
    }

    cout << sum1 - sum2 << endl;
    return 0;
}
